<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AppleAuth</name>
    </assembly>
    <members>
        <member name="T:AppleAuth.AppleAuthProvider">
             <summary>
            <c>AppleAuthProvider</c> contains methods for retrieving an authorization token from Apple, 
            refreshing an existing token, generating `href` attribute for Sign In With Apple button
             </summary>
             <remarks>
             The tokens returned from Apple authorization servers are short lived and should be used for creating
             sessions or accounts in your system.
             </remarks> 
        </member>
        <member name="M:AppleAuth.AppleAuthProvider.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Constructor which initializes new instance of AppleAuthProvider with parameters used in the requests to Apple</summary>
            <param name="clientId">Identifier that is set and obtained from your developer account. (aka "Service ID" that is configured for “Sign In with Apple”)</param>
            <param name="teamId">A 10-character key identifier obtained from your developer account.</param>
            <param name="keyId">A 10-character key identifier obtained from your developer account. Configured for "Sign In with Apple" </param>
            <param name="redirectUrl">URL to which the user will be redirected after successful verification. 
            You need to configure a verified domain and map the redirect URL to it. Can’t be an IP address or localhost </param>
            <param name="state">Can be used for any internal identifiers (e.g. Session IDs, User IDs, Query Strings, etc.)</param>
            <param name="expiration">Can be used to add an expiration for the client secret when generated. Defaults to 5 if not specified.</param>
        </member>
        <member name="M:AppleAuth.AppleAuthProvider.GetAuthorizationToken(System.String,System.String)">
            <summary>
            Retrieves an <c>AuthorizationToken</c> object from Apple. Use this object to create users or sessions.
            </summary>
            <exception cref="T:AppleAuth.Exceptions.AppleRequestException">
            Thrown when HTTP response from Apple is different than 200 OK.
            </exception>
            <returns>
            AuthorizationToken object
            </returns>
            <params>
            <param name="authorizationCode">Received from Apple after successfully redirecting the user</param>
            <param name="privateKey">Content of the .p8 key file.</param>
            </params>
            <remarks>
            For more information about Apple's error responses visit: https://developer.apple.com/documentation/sign_in_with_apple/errorresponse
            </remarks>
        </member>
        <member name="M:AppleAuth.AppleAuthProvider.GetRefreshToken(System.String,System.String)">
             <summary>
             Verifies if a token is valid. 
             Use this method to check daily if the user is still signed in on your app using Apple ID.
             </summary>
             <exception cref="T:AppleAuth.Exceptions.AppleRequestException">
             Thrown when HTTP response from Apple is different than 200 OK.
             </exception>
            <remarks>
             For reference of Apple's error responses visit: https://developer.apple.com/documentation/sign_in_with_apple/errorresponse
             </remarks>
             <param name="refreshToken">Received from Apple when successfully retrieving an AuthorizationToken object</param>
             <param name="privateKey">Content of the .p8 key file.</param>
             <returns>
             AuthorizationToken object containing only AuthorizationCode and Expiration
             </returns>
        </member>
        <member name="M:AppleAuth.AppleAuthProvider.GetButtonHref">
            <summary>
            Generates url for the 'href' attribute of the "Sign in with Apple" button
            </summary>
            <remarks>
            For information how to display the "Sign in with Apple" buttons visit: https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_js/displaying_sign_in_with_apple_buttons
            </remarks>
            <returns>string/url</returns>
        </member>
        <member name="M:AppleAuth.AppleAuthProvider.SetUserInformation(AppleAuth.TokenObjects.AuthorizationToken)">
            <summary>
            Reads the JSON Web Token returned from apple 
            and creates new UserInformation object with information for the specific user
            </summary>
            <param name="tokenResponse">AuthorizationToken object</param>
        </member>
        <member name="M:AppleAuth.AppleAuthProvider.ValidateStringParameters(System.Collections.Generic.List{System.String})">
            <summary>
            If any parameter is null or empty string throws an exception
            </summary>
        </member>
        <member name="T:AppleAuth.Constants.ClaimConstants">
            <summary>
            JSON Web Token Claims constants.
            </summary>
        </member>
        <member name="T:AppleAuth.Constants.GlobalConstants">
            <summary>
            Globally used constants.
            </summary>
        </member>
        <member name="T:AppleAuth.Cryptography.TokenGenerator">
            <summary>
            Class that manages generation of JWT tokens.
            </summary>
        </member>
        <member name="M:AppleAuth.Cryptography.TokenGenerator.GenerateAppleClientSecret(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Generates the signed JSON Web Token
            </summary>
            <param name="privateKey"></param>
            <param name="teamId"></param>
            <param name="clientId"></param>
            <param name="keyId"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:AppleAuth.Cryptography.TokenGenerator.VerifyAppleIDToken(System.String,System.String)">
            <summary>
            Verify if the token that Apple has sent is valid and genuine.
            </summary>
            <param name="token"></param>
            <param name="clientId"></param>
        </member>
        <member name="M:AppleAuth.Cryptography.TokenGenerator.GetFormattedPrivateKey(System.String)">
            <summary>
            Removes empty lines from string; Also removes lines like the following:"-----BEGIN PRIVATE KEY-----"
            </summary>
        </member>
        <member name="T:AppleAuth.Exceptions.AppleRequestException">
            <summary>
            Encapsulates error response from Apple's REST API
            </summary>
        </member>
        <member name="T:AppleAuth.Exceptions.InvalidParametersException">
            <summary>
            Thrown when one or more parameters is null or invalid.
            </summary>
        </member>
        <member name="T:AppleAuth.Http.AppleRestClient">
            <summary>
            Used for sending requests to Apple's REST services.
            </summary>
        </member>
        <member name="M:AppleAuth.Http.AppleRestClient.SentTokenRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends request to Apple's authorization endpoint.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AppleAuth.Http.AppleRestClient.GenerateRequestMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Generates an HttpRequestMessage as described in Apple's documentation: https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens
            </summary>
        </member>
        <member name="T:AppleAuth.TokenObjects.AuthorizationToken">
            <summary>
            Received from Apple after successfull authentication of the user.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.AuthorizationToken.AuthorizationCode">
            <summary>
            (Reserved for future use) A token used to access allowed data. 
            Currently, no data set has been defined for access.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.AuthorizationToken.ExpiresInSeconds">
            <summary>
            Expiration time of the token in seconds.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.AuthorizationToken.Token">
            <summary>
            A JSON Web Token that contains the user’s identity information.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.AuthorizationToken.RefreshToken">
            <summary>
            On success, the server issues a refresh token, which you use to validate if the user is still logged in using Apple ID.
            Store this token securely on your server.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.AuthorizationToken.TokenType">
            <summary>
            The type of access token. It will always be 'Bearer'.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.AuthorizationToken.UserInformation">
            <summary>
            Object containing information about the user. 
            </summary>
            <remarks>
            The user might choose to hide their email. In this case they use a private email with which you can
            communicate via the Private Email Relay Service. For more info visit: https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_js/communicating_using_the_private_email_relay_service
            </remarks>
        </member>
        <member name="T:AppleAuth.TokenObjects.InitialTokenResponse">
            <summary>
            Can be used for mapping the body of the HTTP request on the specified Redirect URL.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.InitialTokenResponse.state">
            <summary>
            Can be used for any internal identifiers (e.g. Session IDs, User IDs, Query Strings, etc.).
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.InitialTokenResponse.code">
            <summary>
            Authorization code that should be exchanged for an Auhtorization token.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.InitialTokenResponse.id_token">
            <summary>
            Initial JSON Web Token containing information about issuer, user, etc.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.InitialTokenResponse.user">
            <summary>
            Information about the user. Send only the first time the user signs in.
            </summary>
        </member>
        <member name="T:AppleAuth.TokenObjects.TokenType">
            <summary>
            Sets the value of "grant_type" when maing a request to Apple's authentication endpoint.
            </summary>
        </member>
        <member name="F:AppleAuth.TokenObjects.TokenType.AuthorizationCode">
            <summary>
            Used for retrieving a JSON Web Token that contains the user’s identity information.
            </summary>
        </member>
        <member name="F:AppleAuth.TokenObjects.TokenType.RefreshToken">
            <summary>
            Used for verifying if a token is valid.
            </summary>
        </member>
        <member name="T:AppleAuth.TokenObjects.UserInformation">
             <summary>
            Object containing information about the user. 
             </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.UserInformation.UserID">
            <summary>
            Unique ID generated by Apple for your app.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.UserInformation.Email">
            <summary>
            Email address of the user.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.UserInformation.EmailVerified">
            <summary>
            Boolean value displaying if the user has verified email address.
            </summary>
        </member>
        <member name="P:AppleAuth.TokenObjects.UserInformation.TimeOfAuthentication">
            <summary>
            UTC date and time of authentication.
            </summary>
        </member>
    </members>
</doc>
